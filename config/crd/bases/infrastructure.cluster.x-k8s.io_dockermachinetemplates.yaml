---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: dockermachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: DockerMachineTemplate
    listKind: DockerMachineTemplateList
    plural: dockermachinetemplates
    singular: dockermachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DockerMachineTemplate is the Schema for the dockermachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DockerMachineTemplateSpec defines the desired state of DockerMachineTemplate
            properties:
              template:
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: DockerMachineSpec defines the desired state of DockerMachine
                    properties:
                      bootstrapped:
                        description: Bootstrapped is true when the kubeadm bootstrapping
                          has been run against this machine
                        type: boolean
                      customImage:
                        description: CustomImage allows customizing the container
                          image that is used for running the machine
                        type: string
                      providerID:
                        description: ProviderID is the identifier for the DockerMachine
                          instance
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: DockerMachineTemplateStatus defines the observed state of
              DockerMachineTemplate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
